---
- name: Setup | Synchronize openssl artifacts over all nodes
  synchronize:
    src: "{{ openssl_dir }}"
    dest: "/tmp"
  delegate_to: "{{ groups['deployer'][0] }}"
  when: inventory_hostname != groups['deployer'][0]
  tags:
    - setup

- name: Setup | Synchronize openssl directory from tmp on all nodes
  synchronize:
    src: "/tmp/{{ openssl_dir | basename }}"
    dest: "{{ openssl_dir | dirname }}"
  delegate_to: "{{ inventory_hostname }}"
  become: true
  when: inventory_hostname != groups['deployer'][0]
  tags:
    - setup

- name: Setup | Add openssl library in ldconfig
  copy:
    content: "{{ openssl_dir }}/lib"
    dest: "{{ openssl_ldconf }}"
  become: true
  tags:
    - setup
  
- name: Setup | Reload dynamic run-time libraries
  command: ldconfig
  become: true
  tags:
    - setup

- name: Setup | Get the old openssl version
  command: openssl version
  register: old_version_ret
  tags:
    - setup

- name: Setup | Set openssl command version
  set_fact:
    old_openssl_version: "{{ old_version_ret.stdout | regex_replace('^[A-Za-z]+ ([0-9\\.a-z]+) .*$', '\\1') }}"
  tags:
    - setup

- name: Setup | Back up the old openssl
  copy:
    src: "/usr/bin/openssl"
    dest: "/usr/bin/openssl-{{ old_openssl_version }}"
    remote_src: yes
  become: true
  tags:
    - setup

- name: Setup | Copy the new openssl
  copy:
    src: "{{ openssl_dir }}/bin/openssl"
    dest: "/usr/bin/openssl"
    remote_src: yes
  become: true
  tags:
    - setup

- name: Setup | Run openssl version
  command: openssl version
  register: openssl_version_ret
  tags:
    - setup

- name: Setup | Set openssl command version
  set_fact:
    openssl_command_version: "{{ openssl_version_ret.stdout | regex_replace('^[A-Za-z]+ ([0-9\\.a-z]+) .*$', '\\1') }}"
  tags:
    - setup

- name: Test | Check openssl version is matched
  debug:
    msg: "Desired openssl version: {{ openssl_version }} | Installed openssl version: {{ openssl_command_version }}"
  failed_when: openssl_version != openssl_command_version
  tags:
    - setup
...
